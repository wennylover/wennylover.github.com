<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[默言，在路上]]></title>
  <link href="http://wennylover.github.com/atom.xml" rel="self"/>
  <link href="http://wennylover.github.com/"/>
  <updated>2013-03-08T10:06:59+09:00</updated>
  <id>http://wennylover.github.com/</id>
  <author>
    <name><![CDATA[默言]]></name>
    <email><![CDATA[rugang6891@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[rails应用中timezones的正确用法]]></title>
    <link href="http://wennylover.github.com/blog/2013/03/08/the-guide-to-rails-time-zones/"/>
    <updated>2013-03-08T11:08:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2013/03/08/the-guide-to-rails-time-zones</id>
    <content type="html"><![CDATA[<h3>说明</h3>

<hr />

<p>本文参照翻译了以下博文:</p>

<p><a href="http://danilenko.org/2012/7/6/rails_timezones/">The Exhaustive Guide to Rails Time Zones</a><br/>
作者: Alexander</p>

<h3>正文</h3>

<hr />

<ul>
<li>得到当前时间

<blockquote><p><code>正确做法</code><br/>
Time.zone.now</p>

<p><code>可接受做法</code><br/>
Time.now.in_time_zone<br/>
DateTime.now.in_time_zone</p>

<p><code>错误做法</code><br/>
Time.now<br/>
DateTime.now</p></blockquote></li>
<li>得到日期（比如今天，昨天等）

<blockquote><p><code>正确做法</code><br/>
Time.zone.today<br/>
Time.zone.today - 1.day</p>

<p><code>可接受做法</code><br/>
Date.current<br/>
Date.yesterday</p>

<p><code>错误做法</code><br/>
Date.today</p></blockquote></li>
<li>生成Time（Build Time）

<blockquote><p><code>正确做法</code><br/>
Time.zone.local(2013, 3, 8, 10, 00)</p>

<p><code>错误做法</code><br/>
Time.new(2013, 3, 8, 10, 00)<br/>
DateTime.new(2013, 3, 8, 10, 00)</p></blockquote></li>
<li>从时间戳生成Time（Time from Timestamp）

<blockquote><p><code>正确做法</code><br/>
Time.zone.at(Timestamp)</p>

<p><code>可接受做法</code><br/>
Time.at(Timestamp).in_time_zone</p>

<p><code>错误做法</code><br/>
Time.at(Timestamp)</p></blockquote></li>
<li>解析时间（简单）

<blockquote><p><code>正确做法</code><br/>
Time.zone.parse(str)</p>

<p><code>错误做法</code><br/>
Time.parse(str)</p></blockquote></li>
<li>解析时间（按照严格格式）

<blockquote><p><code>正确做法</code><br/>
Time.zone.strptime(str, &#8220;%Y-%m-%d %H:%M %Z&#8221;)<br/>
注意：这种比较好的做法，需要引入作者自己写的gem。<a href="https://github.com/doz/time_zone_ext">TimeZoneExt</a></p>

<p><code>可接受做法</code><br/>
DateTime.strptime(str, &#8220;%Y-%m-%d %H:%M %Z&#8221;).in_time_zone</p>

<p><code>错误做法</code><br/>
DateTime.strptime(str, &#8220;%Y-%m-%d %H:%M %Z&#8221;)</p></blockquote></li>
<li>日期转时间（Get Time From Date）

<blockquote><p><code>正确做法</code><br/>
date.beginning_of_day</p>

<p><code>可接受做法</code><br/>
date.to_time_in_current_zone</p>

<p><code>错误做法</code><br/>
date.to_time</p></blockquote></li>
</ul>


<h3>注意事项</h3>

<hr />

<ul>
<li>ruby的标准库中，比如Time和DateTime类是没有考虑时区（TimeZone）的概念在里面的。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的octopress博客写法总结]]></title>
    <link href="http://wennylover.github.com/blog/2013/03/07/my-octopress-post-syntax/"/>
    <updated>2013-03-07T10:51:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2013/03/07/my-octopress-post-syntax</id>
    <content type="html"><![CDATA[<p>我的octopress博客写法遵循如下:</p>

<ul>
<li>写小标题分段如下:</li>
</ul>


<h4>小标题</h4>

<hr />

<ul>
<li>对于在句子中用到的命令，写法如下:</li>
</ul>


<p>这里是一个命令 <code>git status</code> ，用来查看当前git仓库的状态。</p>

<ul>
<li>使用 <code>*</code> 进行无须列表，使用 <code>1.</code> 进行有序列表</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim常用总结]]></title>
    <link href="http://wennylover.github.com/blog/2013/03/07/vim-tips/"/>
    <updated>2013-03-07T10:44:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2013/03/07/vim-tips</id>
    <content type="html"><![CDATA[<h4>自动补全</h4>

<hr />

<ol>
<li><code>ctrl-x</code></li>
<li><code>help i_ctrl-x</code></li>
</ol>


<h4>收缩代码</h4>

<hr />

<ol>
<li>zf</li>
<li>zdgit</li>
<li>zo</li>
<li>zc</li>
<li>mkview</li>
<li>loadvie</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[windows下安装ctags]]></title>
    <link href="http://wennylover.github.com/blog/2013/03/07/install-ctags-on-windows/"/>
    <updated>2013-03-07T10:21:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2013/03/07/install-ctags-on-windows</id>
    <content type="html"><![CDATA[<h4>背景</h4>

<hr />

<p>在windows中安装了gvim后，如果使用了taglist等插件后，启动gvim，
会报错，因为找不到ctags命令，而在linux下，默认会安装ctags命令。</p>

<h4>安装过程</h4>

<hr />

<ol>
<li>下载安装包: http://ctags.sourceforge.net/</li>
<li>将下载的zip包解压到 <code>vim/vim73/</code> 目录下</li>
<li>将 <code>ctags/</code> 目录添加到环境变量path中</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby,Rails的一些概念和注意点]]></title>
    <link href="http://wennylover.github.com/blog/2013/02/05/ruby-rails-tips/"/>
    <updated>2013-02-05T14:39:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2013/02/05/ruby-rails-tips</id>
    <content type="html"><![CDATA[<h4>Ruby,Rails的一些概念</h4>

<hr />

<ul>
<li>rvm: ruby version manager, Ruby版本管理工具</li>
<li>gem(rubygem): 一个ruby程序，用来管理gem包的安装等，类似linux下的apt-get<br/>
  ruby1.9.2以前版本需要 <code>require 'rubygems'</code> ，ruby1.9.2开始已经自动包含gem。</li>
<li>bundle: 用来管理一个rails web工程的所有gem包的依赖，版本等。</li>
<li>rake: 一个gem包，也就是一个ruby程序，作用是用来执行其他用ruby开发的task的程序。</li>
<li>rack: A Ruby Webserver interface.是一个提供了一个ruby web服务器和ruby web框架之间的最小接口的gem程序。主要是web框架开发者用的。</li>
</ul>


<h4>Ruby,Rails的一些注意点</h4>

<hr />

<ul>
<li>.ru后缀的文件就是rackup文件。比如rails应用中的config.ru,可以通过 <code>rackup config.ru</code> 来执行rackup文件。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows常用命令]]></title>
    <link href="http://wennylover.github.com/blog/2013/01/25/usual-command-on-windows/"/>
    <updated>2013-01-25T16:50:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2013/01/25/usual-command-on-windows</id>
    <content type="html"><![CDATA[<ul>
<li>tracert www.github.com<br/>
可以查看到连接到host的路由经过，可以借此查看自己的外网IP。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[常用软件列表]]></title>
    <link href="http://wennylover.github.com/blog/2013/01/25/software-list/"/>
    <updated>2013-01-25T16:44:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2013/01/25/software-list</id>
    <content type="html"><![CDATA[<h3>Windows系</h3>

<hr />

<ul>
<li>VirtuaWin<br/>
  windows下的虚拟桌面软件（有portable版本）</li>
</ul>


<h3>Linux系</h3>

<hr />

<ul>
<li>rabbitvcs<br/>
  linux下的SVN client，类似windows下的TortoiseSVN。</li>
<li>nautinus<br/>
  Linux下的资源管理器（resource manager）。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在局域网（LAN）中访问webrick服务器速度过慢]]></title>
    <link href="http://wennylover.github.com/blog/2013/01/25/access-slow-of-webrick-in-the-lan/"/>
    <updated>2013-01-25T16:09:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2013/01/25/access-slow-of-webrick-in-the-lan</id>
    <content type="html"><![CDATA[<h3>问题现象描述</h3>

<hr />

<p>在Linux虚拟机中进行rails开发和server构建，通过外边的windows访问应用时，
速度很慢。</p>

<h3>对策一</h3>

<hr />

<p>参考帖子:  http://www.flatws.cn/article/program/ruby/2011-05-01/23456.html</p>

<p>帖子内容总结（修改了两个文件）<br/>
修改文件1</p>

<pre><code>路径：/usr/local/rvm/rubies/ruby-1.9.3-p286/lib/ruby/1.9.1/webrick
文件：server.rb
方法：GenericServer#start_thread
代码：
addr = sock.peeraddr 改为 addr = sock.peeraddr(:numeric)
</code></pre>

<p>修改文件2</p>

<pre><code>路径：/usr/local/rvm/rubies/ruby-1.9.3-p286/lib/ruby/1.9.1/webrick
文件：httprequest.rb
方法：HTTPRequest#parse
代码：
@peeraddr = socket.respond_to?(:peeraddr) ? socket.peeraddr : []
改为
@peeraddr = socket.respond_to?(:peeraddr) ? socket.peeraddr(:numeric ) : []
</code></pre>

<h3>对策二</h3>

<hr />

<p>修改内容如下</p>

<pre><code>修改文件：#{RUBY_HOME}/lib/ruby/1.9.1/webrick/config.rb 
:DoNotReverseLookup =&gt; nil
改为
:DoNotReverseLookup =&gt; true
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WindowsでNetBeansでrailsのDebug環境の構築(失敗した)]]></title>
    <link href="http://wennylover.github.com/blog/2013/01/25/the-install-of-rails-debug-env-of-netbeans-on-windows/"/>
    <updated>2013-01-25T15:36:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2013/01/25/the-install-of-rails-debug-env-of-netbeans-on-windows</id>
    <content type="html"><![CDATA[<h3>前言</h3>

<hr />

<p>这里只是单纯的记录了自己在windows中为NetBeans构筑Debug环境过程中的一些
注意事项，主要是碰到一些错误。并且在windows这次没有成功。<br/>
特别注意: <em><strong>这里不是手顺</strong></em>。</p>

<h3>正文内容</h3>

<hr />

<ul>
<li>日本語構築手順<br/>
  http://www.terut.net/?p=314</li>
<li>windowsでDebug環境の構築（失敗っちゃた）</li>
</ul>


<p>■gemfiles に「gem &#8216;ruby-debug19&#8217;」を追加<br/>
■bundle install を実行する<br/>
■libv8 -v &#8216;3.3.10.4&#8217;　がインストールされてないです。</p>

<pre><code>原因：Checking for Python...Unable to build libv8: Python not found!
Pythonの環境がないです。

ご参照
http://stackoverflow.com/questions/9174328/fatal-error-while-bundle-install-while-installing-libv8
</code></pre>

<p>■ActivePythonをインストールする<br/>
■再Bundle install して、下記のエラーができ来ました。</p>

<pre><code>Installing therubyracer (0.9.10) with native extensions
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LinuxでNetBeansでrailsのDebug環境の構築]]></title>
    <link href="http://wennylover.github.com/blog/2013/01/25/the-install-of-rails-debug-env-of-netbeans-on-linux/"/>
    <updated>2013-01-25T14:58:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2013/01/25/the-install-of-rails-debug-env-of-netbeans-on-linux</id>
    <content type="html"><![CDATA[<h3>前言</h3>

<hr />

<p>这里只是单纯的记录了自己在ubuntu中为NetBeans构筑Debug环境过程中的一些
注意事项，主要是碰到一些错误。<br/>
特别注意: <em><strong>这里不是手顺</strong></em>。</p>

<h3>正文内容</h3>

<hr />

<p>■一番最新のruby-debug-base19 (0.11.26)のインストールが必要です。</p>

<pre><code>ruby-debug-base19 (0.11.26)
ruby-debug-ide19 (0.4.12)
ruby-debug19 (0.11.6)

gem install ruby-debug19 -- --with-ruby-include=C:\ruby\Ruby193\include\ruby-1.9.1\ruby-1.9.3-p286
curl -OL http://rubyforge.org/frs/download.php/75415/ruby-debug-base19-0.11.26.gem
curl -OL http://rubyforge.org/frs/download.php/75414/linecache19-0.5.13.gem

====ご参照===
https://gist.github.com/1457544
http://ruby-china.org/topics/843
</code></pre>

<p>■environment.rbに下記のメソッドの追加が必要です。</p>

<pre><code># add by dairg 20121101
class String
  def is_binary_data?
    ( self.count( "^ -~", "^\r\n" ).fdiv(self.size) &gt; 0.3 || self.index( "\x00" ) ) unless empty?
  end
end

=====ご参照=====
http://stackoverflow.com/questions/8961367/aptana-3-ruby-debugger-exception-in-debugthread-loop-undefined-method-is-bin/9043481#9043481
</code></pre>

<p>■linecache19 (0.5.13)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux常用命令]]></title>
    <link href="http://wennylover.github.com/blog/2012/12/31/linuxchang-yong-ming-ling/"/>
    <updated>2012-12-31T23:47:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2012/12/31/linuxchang-yong-ming-ling</id>
    <content type="html"><![CDATA[<h3>桌面命令类</h3>

<hr />

<ul>
<li>切换到不同tty的命令 <code>chvt 1-7</code></li>
</ul>


<h3>实用命令类</h3>

<hr />

<ul>
<li>查看当前系统发行版的信息 <code>lsb_release</code></li>
<li>查看系统硬件信息目录 <code>/proc</code></li>
<li>文本处理三剑客 <code>grep</code> <code>sed</code> <code>awk</code>

<ol>
<li>grep:主要是查找字符串</li>
<li>sed:主要是以行为单位处理字符串</li>
<li>awk:主要是针对一行字符串，利用间隔符，对每一段进行处理</li>
</ol>
</li>
<li>列出所有打开的文件，可以进行各种网络调试等。 <code>lsof</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何在ubuntu server中安装GUI界面]]></title>
    <link href="http://wennylover.github.com/blog/2012/12/30/ru-he-zai-ubuntu-serverzhong-an-zhuang-guijie-mian/"/>
    <updated>2012-12-30T13:41:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2012/12/30/ru-he-zai-ubuntu-serverzhong-an-zhuang-guijie-mian</id>
    <content type="html"><![CDATA[<h3>关于ubuntu server</h3>

<p>其实个人认为ubuntu server和ubuntu desktop版本没有什么本质的区别，只是默认安装的软件/组件不同而已。
比如ubuntu server默认会安装很多服务，比如mysql，apache等等，而desktop版本会默认安装一些常用的办公软件等。
ubuntu server默认不安装桌面环境，如果需要的话可以按照以下步骤进行安装。</p>

<h3>安装GUI步骤</h3>

<pre><code>1. apt-get install xinit
2. apt-get install gdm
3. apt-get install ubuntu-desktop
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My first blog]]></title>
    <link href="http://wennylover.github.com/blog/2012/12/22/my-first-blog/"/>
    <updated>2012-12-22T20:30:00+09:00</updated>
    <id>http://wennylover.github.com/blog/2012/12/22/my-first-blog</id>
    <content type="html"><![CDATA[<p>hello, octopress!
hello, rails!</p>
]]></content>
  </entry>
  
</feed>
